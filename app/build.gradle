apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

repositories {
    google()
    mavenCentral()
    maven {
        url "https://maven.scijava.org/content/groups/public/"
    }

//    maven {
//        url "https://raw.github.com/processing/processing-android/repository/"
//    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kitaharalab/cmx")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kitaharalab/javax.sound.midi-for-Android")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kitaharalab/USB-MIDI-Driver")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

def jamsketchPropertiesFile = rootProject.file("jamsketch.properties")
def jamsketchProperties = new Properties()
jamsketchProperties.load(new FileInputStream(jamsketchPropertiesFile))

android {
    namespace "jp.kthrlab.jamsketch"
    compileSdk 34
    defaultConfig {
        applicationId "jp.kthrlab.jamsketch"
        minSdkVersion 27
        targetSdk 34
        versionCode 6
        versionName "1.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    println(jamsketchProperties)
    buildFeatures {
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "CLOUD_FUNCTIONS", jamsketchProperties['cloudfunction']
        }
        debug {
            buildConfigField "String", "CLOUD_FUNCTIONS", jamsketchProperties['cloudfunction']
        }
    }

    compileOptions {
        sourceCompatibility = "11"
        targetCompatibility = "11"
    }

    packagingOptions {
        resources {
            excludes += ['assets/shaders/*.glsl', 'META-INF/groovy-release-info.properties', 'META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES']
        }
    }

    kotlinOptions{
        jvmTarget = '11'
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    // Onboarding
    implementation 'androidx.leanback:leanback:1.0.0'
    //     implementation(name: 'javax.sound.midi-release', ext: 'aar')
//    implementation project(path: ':javax.sound.midi')
//     implementation(name: 'MIDIDriver-release', ext: 'aar')
//     implementation(name: 'cmx_android-release', ext: 'aar')

    testImplementation 'junit:junit:4.13.2'

    // implementation project(path: ':cmx_android')
    // cmx on GitHub Packages
    implementation 'javax.sound.midi-for-Android:javax.sound.midi-release:0.2.0-kitaharalab'
    implementation 'USB-MIDI-Driver:mididriver-release:0.2.0-kitaharalab'
    implementation 'cmx:cmx_android-release:1.1.2'

//    // cmx_common
//    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
//    implementation 'org.apache.commons:commons-math3:3.6.1'
//    // https://mvnrepository.com/artifact/be.ac.ulg.montefiore.run.jahmm/jahmm
//    implementation 'be.ac.ulg.montefiore.run.jahmm:jahmm:0.6.2'

    implementation 'com.google.android.gms:play-services-auth:21.2.0'
    implementation 'com.google.http-client:google-http-client-gson:1.44.2'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // JSON
    // https://mvnrepository.com/artifact/com.beust/klaxon
    implementation 'com.beust:klaxon:5.6'

    // TensorFlow Lite
    // https://mvnrepository.com/artifact/org.tensorflow/tensorflow-lite
    implementation 'org.tensorflow:tensorflow-lite:2.15.0'


}

tasks.register('comps') {
    afterEvaluate {
        println("Components: " + components.names)
    }
}

